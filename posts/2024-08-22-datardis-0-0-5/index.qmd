---
title: "{datardis} package v.0.0.5"
subtitle: "Explore the latest Dr Who episodes"
author: "Jonathan Kitt"
date: "2024-08-22"
image: img/plot.png
toc: true
categories: [R, Package, Dr Who]
---

# Introduction

<br>

The [{datardis}](https://github.com/KittJonathan/datardis) package includes datasets which provide lists of episodes for the Doctor Who and Torchwood TV series.

The latest version of the package ([v.0.0.5](https://cran.r-project.org/web/packages/datardis/index.html)) includes the latest episodes :

-   2023 specials\
-   Series 14 (2024)

<br>

# Installing the package

<br>

To install the latest version of the package, use the following command:

```{r, echo=TRUE, eval=FALSE, message=FALSE, warning=FALSE}

# ðŸ”½ INSTALL THE PACKAGE --------------------------------------------------

install.packages("datardis")
```

<br>

Alternatively, you can install the package from GitHub using {devtools} :

```{r, echo=TRUE, eval=FALSE, message=FALSE, warning=FALSE}
devtools::install_github("KittJonathan/datardis")
```

<br>

# Loading the packages

<br>

First of all, let's load the packages we'll be using :

-   [{datardis}](https://github.com/KittJonathan/datardis)

-   [{tidyverse}](https://www.tidyverse.org/) to clean the data and create the plots

-   [{showtext}](https://github.com/yixuan/showtext) to add custom fonts

If you don't have the packages installed, simply use the `install.packages("...")` function.

<br>

```{r, echo=TRUE, eval=TRUE, message=FALSE, warning=FALSE}
# ðŸ“¦ LOAD THE PACKAGES ----------------------------------------------------

library(tidyverse)
library(showtext)
library(datardis)
```

<br>

# Cleaning the data

<br>

We use the following code to clean the data:

```{r, echo=TRUE, eval=TRUE, warning=FALSE, message=FALSE}
# ðŸ§¹  Clean the data ----

d <- drwho_episodes |> 
  filter(year(first_aired) >= 2023) |> 
  select(episode_number, type, episode_title, first_aired, uk_viewers, duration) |> 
  mutate(uk_viewers = as.numeric(uk_viewers),
         episode_title = case_when(type == "special" ~ paste0(episode_title, " *"),
                                   .default = episode_title),
         episode_title = fct_rev(fct_inorder(episode_title)))

d
```

<br>

# Creating the plot

<br>

We use the following code to create the plot :

```{r, echo=TRUE, eval=TRUE, warning=FALSE, message=FALSE}
# ðŸ“Š CREATE THE PLOT ------------------------------------------------------

p <- d |> 
  ggplot() +
  geom_segment(aes(x = 0, xend = uk_viewers,
                   y = episode_title, yend = episode_title),
               colour = "#a6b8c7") +
  geom_point(aes(x = uk_viewers, y = episode_title),
             shape = 21, size = 10, fill = "#00203c", colour = "#a6b8c7") +
  geom_text(aes(x = uk_viewers, y = episode_title, label = uk_viewers),
            hjust = 0.5, family = "Roboto Condensed", size = 10, colour = "white") +
  geom_text(aes(x = 0, y = episode_title, label = episode_title),
            hjust = 0, vjust = -0.5, family = "Roboto Condensed",
            size = 14, colour = "white") +
  geom_segment(aes(x = -0.25, xend = -0.25, y = 9.75, yend = 12.25),
               colour = "#a6b8c7", linewidth = 1) +
  geom_segment(aes(x = -0.25, xend = -0.25, y = 0.75, yend = 9.25),
              colour = "#a6b8c7", linewidth = 1) +
  geom_text(aes(x = -0.5, y = 11, label = "2023 specials"),
            hjust = 0.5, family = "Roboto Condensed", size = 18, colour = "white",
            angle = 90) +
  geom_text(aes(x = -0.5, y = 5, label = "14th series"),
            hjust = 0.5, family = "Roboto Condensed", size = 18, colour = "white",
            angle = 90) +
  labs(title = "Number of UK viewers of Doctor Who episodes (in millions)",
       subtitle = "Special episodes are noted with a *") +
  theme_minimal() +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        panel.background = element_rect(colour = "#00203c",
                                        fill = "#00203c"),
        panel.grid = element_blank(),
        plot.background = element_rect(colour = "#00203c",
                                       fill = "#00203c"),
        plot.title = element_text(family = "Roboto Condensed",
                                  colour = "white", size = 50, hjust = 0.5,
                                  margin = margin(t = 5, b = 5)),
        plot.subtitle = element_text(family = "Roboto Condensed",
                                  colour = "white", size = 30, hjust = 0.5))
```

<br>

# Save the plot

<br>

We use the following code to export the plot to a `.png` file :

```{r, echo=TRUE, eval=FALSE, warning=FALSE, message=FALSE}
# ðŸ’¾ EXPORT THE PLOT ------------------------------------------------------

ggsave("img/drwho_viewers.png", p,
       dpi = 320, width = 12, height = 6)

```

<br>

And here's the result!

![](img/plot.png){fig-align="center"}
