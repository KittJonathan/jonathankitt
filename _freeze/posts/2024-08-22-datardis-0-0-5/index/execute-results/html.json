{
  "hash": "5f817123dc84f304c615a573da52d0cd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"{datardis} package v.0.0.5\"\nsubtitle: \"Explore the latest Dr Who episodes\"\nauthor: \"Jonathan Kitt\"\ndate: \"2024-08-22\"\nimage: img/plot.png\ntoc: true\ncategories: [R, Package, Dr Who]\n---\n\n\n# Introduction\n\n<br>\n\nThe [{datardis}](https://github.com/KittJonathan/datardis) package includes datasets which provide lists of episodes for the Doctor Who and Torchwood TV series.\n\nThe latest version of the package ([v.0.0.5](https://cran.r-project.org/web/packages/datardis/index.html)) includes the latest episodes :\n\n-   2023 specials\\\n-   Series 14 (2024)\n\n<br>\n\n# Installing the package\n\n<br>\n\nTo install the latest version of the package, use the following command:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ðŸ”½ INSTALL THE PACKAGE --------------------------------------------------\n\ninstall.packages(\"datardis\")\n```\n:::\n\n\n<br>\n\nAlternatively, you can install the package from GitHub using {devtools} :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::install_github(\"KittJonathan/datardis\")\n```\n:::\n\n\n<br>\n\n# Loading the packages\n\n<br>\n\nFirst of all, let's load the packages we'll be using :\n\n-   [{datardis}](https://github.com/KittJonathan/datardis)\n\n-   [{tidyverse}](https://www.tidyverse.org/) to clean the data and create the plots\n\n-   [{showtext}](https://github.com/yixuan/showtext) to add custom fonts\n\nIf you don't have the packages installed, simply use the `install.packages(\"...\")` function.\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ðŸ“¦ LOAD THE PACKAGES ----------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(datardis)\n```\n:::\n\n\n<br>\n\n# Cleaning the data\n\n<br>\n\nWe use the following code to clean the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ðŸ§¹  Clean the data ----\n\nd <- drwho_episodes |> \n  filter(year(first_aired) >= 2023) |> \n  select(episode_number, type, episode_title, first_aired, uk_viewers, duration) |> \n  mutate(uk_viewers = as.numeric(uk_viewers),\n         episode_title = case_when(type == \"special\" ~ paste0(episode_title, \" *\"),\n                                   .default = episode_title),\n         episode_title = fct_rev(fct_inorder(episode_title)))\n\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 Ã— 6\n   episode_number type    episode_title          first_aired uk_viewers duration\n            <int> <chr>   <fct>                  <date>           <dbl>    <dbl>\n 1              1 special The Star Beast *       2023-11-25        7.61       57\n 2              2 special Wild Blue Yonder *     2023-12-02        7.14       54\n 3              3 special The Giggle *           2023-12-09        6.85       62\n 4             NA special The Church on Ruby Roâ€¦ 2023-12-25        7.49       55\n 5              1 episode Space Babies           2024-05-11        4.01       46\n 6              2 episode The Devil's Chord      2024-05-11        3.91       49\n 7              3 episode Boom                   2024-05-18        3.58       44\n 8              4 episode 73 Yards               2024-05-25        4.06       47\n 9              5 episode Dot and Bubble         2024-06-01        3.38       43\n10              6 episode Rogue                  2024-06-08        3.52       44\n11              7 episode The Legend of Ruby Suâ€¦ 2024-06-15        3.5        44\n12              8 episode Empire of Death        2024-06-22        3.69       54\n```\n\n\n:::\n:::\n\n\n<br>\n\n# Creating the plot\n\n<br>\n\nWe use the following code to create the plot :\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ðŸ“Š CREATE THE PLOT ------------------------------------------------------\n\np <- d |> \n  ggplot() +\n  geom_segment(aes(x = 0, xend = uk_viewers,\n                   y = episode_title, yend = episode_title),\n               colour = \"#a6b8c7\") +\n  geom_point(aes(x = uk_viewers, y = episode_title),\n             shape = 21, size = 10, fill = \"#00203c\", colour = \"#a6b8c7\") +\n  geom_text(aes(x = uk_viewers, y = episode_title, label = uk_viewers),\n            hjust = 0.5, family = \"Roboto Condensed\", size = 10, colour = \"white\") +\n  geom_text(aes(x = 0, y = episode_title, label = episode_title),\n            hjust = 0, vjust = -0.5, family = \"Roboto Condensed\",\n            size = 14, colour = \"white\") +\n  geom_segment(aes(x = -0.25, xend = -0.25, y = 9.75, yend = 12.25),\n               colour = \"#a6b8c7\", linewidth = 1) +\n  geom_segment(aes(x = -0.25, xend = -0.25, y = 0.75, yend = 9.25),\n              colour = \"#a6b8c7\", linewidth = 1) +\n  geom_text(aes(x = -0.5, y = 11, label = \"2023 specials\"),\n            hjust = 0.5, family = \"Roboto Condensed\", size = 18, colour = \"white\",\n            angle = 90) +\n  geom_text(aes(x = -0.5, y = 5, label = \"14th series\"),\n            hjust = 0.5, family = \"Roboto Condensed\", size = 18, colour = \"white\",\n            angle = 90) +\n  labs(title = \"Number of UK viewers of Doctor Who episodes (in millions)\",\n       subtitle = \"Special episodes are noted with a *\") +\n  theme_minimal() +\n  theme(axis.title = element_blank(),\n        axis.text = element_blank(),\n        panel.background = element_rect(colour = \"#00203c\",\n                                        fill = \"#00203c\"),\n        panel.grid = element_blank(),\n        plot.background = element_rect(colour = \"#00203c\",\n                                       fill = \"#00203c\"),\n        plot.title = element_text(family = \"Roboto Condensed\",\n                                  colour = \"white\", size = 50, hjust = 0.5,\n                                  margin = margin(t = 5, b = 5)),\n        plot.subtitle = element_text(family = \"Roboto Condensed\",\n                                  colour = \"white\", size = 30, hjust = 0.5))\n```\n:::\n\n\n<br>\n\n# Save the plot\n\n<br>\n\nWe use the following code to export the plot to a `.png` file :\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ðŸ’¾ EXPORT THE PLOT ------------------------------------------------------\n\nggsave(\"img/drwho_viewers.png\", p,\n       dpi = 320, width = 12, height = 6)\n```\n:::\n\n\n<br>\n\nAnd here's the result!\n\n![](img/plot.png){fig-align=\"center\"}\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}