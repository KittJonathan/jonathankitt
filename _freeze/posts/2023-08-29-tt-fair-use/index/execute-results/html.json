{
  "hash": "21483450697bac3a52758d019d9e4e3d",
  "result": {
    "markdown": "---\ntitle: \"#TidyTuesday 2023 - Week 35\"\nsubtitle: \"Fair use\"\nauthor: \"Jonathan Kitt\"\ndate: \"2023-08-29\"\nimage: img/tt_2023_w35_fair_use.png\ntoc: true\ncategories: [R, TidyTuesday, datavis, Fair use]\n---\n\n\nThanls to [Dan Oehm](http://gradientdescending.com/) for sharing his tips on addind icons in the script titles!\n\n# Introduction\n\n<br>\n\nThe [#TidyTuesday](https://github.com/rfordatascience/tidytuesday) weekly challenge is organised by the R4DS (R for Data Science) Online Learning Community.\n\nEvery tuesday throughout the year, participants work on a common dataset and share the plots they create.\n\nThe [dataset](https://github.com/rfordatascience/tidytuesday/tree/master/data/2023/2023-08-29) for this challenge comes from the [U.S. Copyright Office Fair Use Index](https://www.copyright.gov/fair-use/fair-index.html).\n\n<br>\n\n# Getting the data\n\n<br>\n\nFirst of all, let's load the packages we'll be using :\n\n-   [{tidyverse}](https://www.tidyverse.org/) to clean the data and create the plots\n\n-   [{showtext}](https://github.com/yixuan/showtext) to change the fonts used\n\n-   [{ggtext}](https://wilkelab.org/ggtext/) to use colours in the title\n\nIf you don't have these packages installed, simply use the `install.packages()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# üì¶ Load packages ----\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(ggtext)\n```\n:::\n\n\n<br>\n\nWe also load the fonts we will use in the plots: [**Bebas Neue**](https://fonts.google.com/specimen/Bebas+Neue?query=bebas+) for the text and [**Londrina Shadow**](https://fonts.google.com/specimen/Londrina+Shadow?query=londrina+sha) for the title.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# üî§ Import fonts ----\n\nfont_add_google(\"Roboto Condensed\", \"Roboto Condensed\")\nshowtext_auto()\n```\n:::\n\n\n<br>\n\nWe can now download the dataset :\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ‚¨áÔ∏è Import the dataset ----\n\nfair_use_cases <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-29/fair_use_cases.csv\")\n```\n:::\n\n\n<br>\n\nThe dataset has **251 observations** (rows) and **7 variables** (columns).\n\n<br>\n\n# Cleaning the data\n\n<br>\n\nWe use the following code to clean the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# üßπ  Clean the data ----\n\nd <- fair_use_cases |>\n  # keep years 2013-2022\n  filter(year >= 2013) |>\n  # count number of found/not found cases per year\n  count(year, fair_use_found) |>\n  # repeat each row n times (n = nb of occurences)\n  uncount(n) |>\n  # create a row index\n  mutate(case_id = 1:n(), .by = c(year, fair_use_found)) |>\n  # use negative values for \"not found\" cases\n  mutate(y = case_when(fair_use_found == TRUE ~ case_id,\n                       TRUE ~ -case_id))\n```\n:::\n\n\n<br>\n\n# Creating the plot\n\n<br>\n\nWe use the following code to create the plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(data = d) +\n  geom_point(aes(x = year, y = y,\n                 colour = fair_use_found),\n             shape = 21, size = 6,\n             show.legend = FALSE) +\n  geom_text(aes(x = year, y = y,\n                colour = fair_use_found),\n            label = \"C\",\n            family = \"Roboto Condensed\", size = 12,\n            show.legend = FALSE) +\n  geom_text(aes(x = year, y = 0, label = year),\n            family = \"Roboto Condensed\", size = 15,\n            colour = \"white\") +\n  scale_colour_manual(values = c(\"#fd574a\", \"#2eed91\")) +\n  labs(title = \"Number of fair use court cases in the U.S. (2013-2022)\",\n       subtitle = \"Colours indicate whether fair use was<span style='color:#2eed91;'> found</span> or <span style='color:#fd574a;'>not found</span> by the court\",\n       caption = \"#TidyTuesday 2023 week 35 | Data from the U.S. Copyright Office Fair Use Index | Jonathan Kitt\") +\n  theme_void() +\n  theme(panel.background = element_rect(fill = \"black\", colour = \"black\"),\n        plot.background = element_rect(fill = \"black\", colour = \"black\"),\n        plot.title = element_markdown(family = \"Roboto Condensed\",\n                                      colour = \"white\", size = 75,\n                                      margin = margin(t = 20, l = 20)),\n        plot.subtitle = element_markdown(family = \"Roboto Condensed\",\n                                         colour = \"white\", size = 50,\n                                         margin = margin(t= 5, l = 20)),\n        plot.caption = element_text(family = \"Roboto Condensed\",\n                                    colour = \"white\", size = 30,\n                                    hjust = 0.5, margin = margin(t = 10, b = 10)))\n```\n:::\n\n\n<br>\n\nWe now create the second plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ‚úèÔ∏è Create the plot ----\n\np2 <- ggplot() +\n  geom_rect(data = p2_scores,\n             aes(xmin = x - 0.85, xmax = x + 0.85,\n                 ymin = 0, ymax = total_thsd),\n            fill = \"#edeb00\") +\n  geom_text(data = p2_scores,\n            aes(x = x, y = total_thsd - 160, label = total_thsd),\n            family = \"Bebas Neue\", colour = \"black\", size = 18) +\n  geom_text(data = p2_x_labels,\n            aes(x = x, y = y, label = label),\n            family = \"Bebas Neue\", colour = \"white\", size = 18) +\n  geom_text(data = p2_text,\n            aes(x = x, y = y, label = label),\n            family = \"Bebas Neue\", colour = \"white\", size = 20,\n            hjust = 0) +\n  xlim(-1, 46) +\n  theme_void() +\n  theme(panel.background = element_rect(fill = \"black\"),\n        plot.background = element_rect(fill = \"black\"))\n\n# üíæ Export plot ----\n\nggsave(\"figs/tt_2023_w35_fair_use.png\", p, dpi = 320, width = 12, height = 6)\n```\n:::\n\n\n<br>\n\nAnd here's the result!\n\n![](img/tt_2023_w35_fair_use.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}